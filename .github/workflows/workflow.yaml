name: test

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  pull_request:
    paths:
      - setup.sh
      - action.yaml
      - .github/workflows/workflow.yaml
jobs:
  lint_shellcheck:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Run shellcheck
        uses: ludeeus/action-shellcheck@master

  test_channel:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system:
          [ubuntu-latest, windows-latest, macos-latest, macos-13, macos-14]
        channel: [stable, beta, master]
        dry-run: [true, false]
        include:
          - operating-system: ubuntu-latest
            channel: main

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - id: flutter-action
        uses: ./
        with:
          channel: ${{ matrix.channel }}
          dry-run: ${{ matrix.dry-run }}
      - name: Echo outputs
        run: |
          echo RUNNER-OS=${{ runner.os }}
          echo RUNNER-ARCH=${{ runner.arch }}

          echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
          echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
          echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
          echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
        shell: bash
      - run: dart --version
        if: ${{ matrix.dry-run != true }}
        shell: bash
      - run: flutter --version
        if: ${{ matrix.dry-run != true }}
        shell: bash
      - run: "! dart --version"
        if: ${{ matrix.dry-run == true }}
        shell: bash
      - run: "! flutter --version"
        if: ${{ matrix.dry-run == true }}
        shell: bash

  test_cache:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system:
          [ubuntu-latest, windows-latest, macos-latest, macos-13, macos-14]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.3
          cache: true
      - run: dart --version
        shell: bash
      - run: flutter --version
        shell: bash


  test_version_file:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ubuntu-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - uses: ./
        with:
          channel: stable
          flutter-version: 3.24.3
      - name: Verify Dart version
        run: dart --version | grep '3.5.3'
        shell: bash
      - name: Verify Flutter version
        run: flutter --version | grep '3.24.3'
        shell: bash

